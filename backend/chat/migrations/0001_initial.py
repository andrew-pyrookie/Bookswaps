# Generated by Django 5.2 on 2025-04-11 19:09

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Chats",
            fields=[
                ("chat_id", models.UUIDField(primary_key=True, serialize=False)),
                ("content", models.TextField()),
                (
                    "status",
                    models.TextField(
                        blank=True,
                        db_comment="Tracks chat lifecycle (Unread, Read, Replied)",
                        null=True,
                    ),
                ),
                (
                    "is_deleted_by_sender",
                    models.BooleanField(
                        blank=True,
                        db_comment="Used to soft-delete from sender view",
                        null=True,
                    ),
                ),
                ("is_deleted_by_receiver", models.BooleanField(blank=True, null=True)),
                ("created_at", models.DateTimeField(blank=True, null=True)),
                (
                    "updated_at",
                    models.DateTimeField(
                        blank=True,
                        db_comment="Tracks last update (e.g., message edited, read)",
                        null=True,
                    ),
                ),
            ],
            options={
                "db_table": "chats",
                "db_table_comment": "Stores private Chat Forum messages",
            },
        ),
        migrations.CreateModel(
            name="Societies",
            fields=[
                ("society_id", models.UUIDField(primary_key=True, serialize=False)),
                ("name", models.TextField()),
                ("description", models.TextField(blank=True, null=True)),
                ("focus_type", models.TextField(blank=True, null=True)),
                (
                    "focus_id",
                    models.TextField(
                        blank=True,
                        db_comment="Links to Books.book_id or genre string",
                        null=True,
                    ),
                ),
                ("icon_url", models.TextField(blank=True, null=True)),
                ("is_public", models.BooleanField(blank=True, null=True)),
                (
                    "status",
                    models.TextField(
                        blank=True,
                        db_comment="Lifecycle state: Active, Inactive, Archived",
                        null=True,
                    ),
                ),
                ("created_at", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "db_table": "societies",
                "db_table_comment": "Stores Chat Forum Societies (group chats)",
            },
        ),
        migrations.CreateModel(
            name="SocietyMembers",
            fields=[
                ("member_id", models.UUIDField(primary_key=True, serialize=False)),
                ("role", models.TextField(blank=True, null=True)),
                (
                    "status",
                    models.TextField(
                        blank=True,
                        db_comment="Active, Pending, Removed, or Banned membership state",
                        null=True,
                    ),
                ),
                (
                    "is_creator",
                    models.BooleanField(
                        blank=True,
                        db_comment="True if user is the founding member of the society",
                        null=True,
                    ),
                ),
                ("joined_at", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "db_table": "society_members",
                "db_table_comment": "Tracks Society membership, roles, and member lifecycle",
            },
        ),
        migrations.CreateModel(
            name="SocietyMessages",
            fields=[
                ("message_id", models.UUIDField(primary_key=True, serialize=False)),
                ("content", models.TextField()),
                (
                    "is_pinned",
                    models.BooleanField(
                        blank=True,
                        db_comment="Highlights key group messages in UI",
                        null=True,
                    ),
                ),
                (
                    "status",
                    models.TextField(
                        blank=True,
                        db_comment="Tracks message state: active, edited, flagged, or deleted",
                        null=True,
                    ),
                ),
                ("created_at", models.DateTimeField(blank=True, null=True)),
                (
                    "edited_at",
                    models.DateTimeField(
                        blank=True,
                        db_comment="Timestamp of last message edit",
                        null=True,
                    ),
                ),
            ],
            options={
                "db_table": "society_messages",
                "db_table_comment": "Stores Society chat messages for group interactions",
            },
        ),
    ]
