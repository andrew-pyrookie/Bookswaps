# Generated by Django 5.2 on 2025-04-28 18:22

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('user_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=150, unique=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('age', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(13, message='Users must be at least 13 years old')])),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('country', models.CharField(blank=True, max_length=100, null=True)),
                ('ethnicity', models.CharField(blank=True, max_length=100, null=True)),
                ('role', models.CharField(blank=True, max_length=50, null=True)),
                ('about_you', models.TextField(blank=True, null=True)),
                ('genres', models.JSONField(blank=True, default=list, null=True)),
                ('chat_preferences', models.JSONField(blank=True, default=dict, null=True)),
                ('profile_picture', models.URLField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_active', models.DateTimeField(blank=True, null=True)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('profile_public', models.BooleanField(default=True)),
                ('email_notifications', models.BooleanField(default=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'users',
                'db_table_comment': 'Stores user profiles, driving social features and personalization',
            },
        ),
        migrations.CreateModel(
            name='Follows',
            fields=[
                ('follow_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_mutual', models.BooleanField(default=False, help_text='Precomputed mutual status to accelerate chat unlocks')),
                ('active', models.BooleanField(default=True, help_text='Soft deletion for unfollow events, keeps social history')),
                ('source', models.CharField(choices=[('Search', 'Search'), ('Swap', 'Swap'), ('Chat', 'Chat'), ('Recommendation', 'Recommendation')], default='Search', help_text='Origin of follow for funnel analysis and personalization', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('followed', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='followers', to=settings.AUTH_USER_MODEL)),
                ('follower', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='following', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'follows',
                'db_table_comment': 'Manages user follows to drive chats, personalization, and feed logic',
            },
        ),
        migrations.AddIndex(
            model_name='customuser',
            index=models.Index(fields=['username'], name='idx_users_username'),
        ),
        migrations.AddIndex(
            model_name='customuser',
            index=models.Index(fields=['email'], name='idx_users_email'),
        ),
        migrations.AddIndex(
            model_name='customuser',
            index=models.Index(fields=['city'], name='idx_users_city'),
        ),
        migrations.AddIndex(
            model_name='follows',
            index=models.Index(fields=['follower'], name='idx_follows_follower_id'),
        ),
        migrations.AddIndex(
            model_name='follows',
            index=models.Index(fields=['followed'], name='idx_follows_followed_id'),
        ),
        migrations.AlterUniqueTogether(
            name='follows',
            unique_together={('follower', 'followed')},
        ),
    ]
