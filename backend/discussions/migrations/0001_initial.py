# Generated by Django 5.2 on 2025-04-11 19:09

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Discussions",
            fields=[
                ("discussion_id", models.UUIDField(primary_key=True, serialize=False)),
                ("type", models.TextField()),
                ("title", models.TextField()),
                ("content", models.TextField()),
                ("tags", models.TextField(blank=True, null=True)),
                ("media_urls", models.TextField(blank=True, null=True)),
                (
                    "spoiler_flag",
                    models.BooleanField(
                        blank=True,
                        db_comment="Warns users if post contains major plot details",
                        null=True,
                    ),
                ),
                ("upvotes", models.IntegerField(blank=True, null=True)),
                ("views", models.IntegerField(blank=True, null=True)),
                (
                    "status",
                    models.TextField(
                        blank=True,
                        db_comment="Controls visibility and moderation state of a post",
                        null=True,
                    ),
                ),
                ("created_at", models.DateTimeField(blank=True, null=True)),
                ("last_edited_at", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "db_table": "discussions",
                "db_table_comment": "User-generated content around books for community interaction",
            },
        ),
        migrations.CreateModel(
            name="Notes",
            fields=[
                ("note_id", models.UUIDField(primary_key=True, serialize=False)),
                (
                    "content",
                    models.TextField(
                        db_comment="Limited to 280 chars to ensure short-form responses"
                    ),
                ),
                ("likes", models.IntegerField(blank=True, null=True)),
                ("depth", models.IntegerField(blank=True, null=True)),
                (
                    "status",
                    models.TextField(
                        blank=True,
                        db_comment="Controls moderation visibility of the comment",
                        null=True,
                    ),
                ),
                ("created_at", models.DateTimeField(blank=True, null=True)),
                ("edited_at", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "db_table": "notes",
                "db_table_comment": "Stores threaded comments under Discussion posts",
            },
        ),
        migrations.CreateModel(
            name="Reprints",
            fields=[
                ("reprint_id", models.UUIDField(primary_key=True, serialize=False)),
                (
                    "comment",
                    models.TextField(
                        blank=True,
                        db_comment="Optional personal comment (max 280 chars)",
                        null=True,
                    ),
                ),
                (
                    "status",
                    models.TextField(
                        blank=True,
                        db_comment="For content moderation and visibility control",
                        null=True,
                    ),
                ),
                ("created_at", models.DateTimeField(blank=True, null=True)),
                ("edited_at", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "db_table": "reprints",
                "db_table_comment": "Tracks reposts of Discussion Tab posts (Reprints)",
            },
        ),
    ]
