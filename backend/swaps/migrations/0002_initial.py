# Generated by Django 5.2 on 2025-04-28 18:22

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('library', '0002_initial'),
        ('swaps', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='notification',
            name='user',
            field=models.ForeignKey(blank=True, db_comment='Recipient of the notification', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='share',
            name='user',
            field=models.ForeignKey(blank=True, db_comment='User sharing the content', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='shares', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='swap',
            name='initiator',
            field=models.ForeignKey(db_comment='User proposing the swap', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='initiated_swaps', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='swap',
            name='initiator_book',
            field=models.ForeignKey(db_comment='Book offered by initiator', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='initiated_swaps', to='library.book'),
        ),
        migrations.AddField(
            model_name='swap',
            name='meetup_location',
            field=models.ForeignKey(blank=True, db_comment='Public location for swap meetup', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='swaps', to='swaps.location'),
        ),
        migrations.AddField(
            model_name='swap',
            name='receiver',
            field=models.ForeignKey(db_comment='User receiving the swap proposal', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='received_swaps', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='swap',
            name='receiver_book',
            field=models.ForeignKey(blank=True, db_comment='Book offered by receiver (optional)', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='received_swaps', to='library.book'),
        ),
        migrations.AddField(
            model_name='notification',
            name='swap',
            field=models.ForeignKey(blank=True, db_comment='Swap related to the notification', null=True, on_delete=django.db.models.deletion.SET_NULL, to='swaps.swap'),
        ),
        migrations.AddField(
            model_name='exchange',
            name='swap',
            field=models.OneToOneField(db_comment='The swap this exchange is associated with', on_delete=django.db.models.deletion.CASCADE, related_name='exchange', to='swaps.swap'),
        ),
        migrations.AddIndex(
            model_name='share',
            index=models.Index(fields=['user', 'content_type', 'content_id'], name='shares_user_id_b61866_idx'),
        ),
        migrations.AddIndex(
            model_name='share',
            index=models.Index(fields=['created_at'], name='shares_created_a488ad_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='share',
            unique_together={('user', 'content_type', 'content_id', 'destination')},
        ),
        migrations.AddIndex(
            model_name='swap',
            index=models.Index(fields=['initiator'], name='swaps_initiat_3d2887_idx'),
        ),
        migrations.AddIndex(
            model_name='swap',
            index=models.Index(fields=['receiver'], name='swaps_receive_e16958_idx'),
        ),
        migrations.AddIndex(
            model_name='swap',
            index=models.Index(fields=['status'], name='swaps_status_696af5_idx'),
        ),
        migrations.AddIndex(
            model_name='swap',
            index=models.Index(fields=['created_at'], name='swaps_created_874c85_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['user', 'is_read'], name='notificatio_user_id_a4dd5c_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['created_at'], name='notificatio_created_e4c995_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['swap'], name='notificatio_swap_id_f80099_idx'),
        ),
        migrations.AddIndex(
            model_name='exchange',
            index=models.Index(fields=['swap'], name='exchanges_swap_id_a6e025_idx'),
        ),
        migrations.AddIndex(
            model_name='exchange',
            index=models.Index(fields=['exchange_date'], name='exchanges_exchang_0050fd_idx'),
        ),
    ]
